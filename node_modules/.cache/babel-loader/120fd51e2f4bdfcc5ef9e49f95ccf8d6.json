{"ast":null,"code":"import{useEffect}from\"react\";import QuoteForm from\"../components/quotes/QuoteForm\";import{useHistory}from\"react-router-dom\";import useHttp from\"../hooks/use-http\";import{addQuote}from\"../lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function NewQuote(){var _useHttp=useHttp(addQuote),sendRequest=_useHttp.sendRequest,status=_useHttp.status;var history=useHistory();useEffect(function(){if(status===\"completed\")history.push(\"/quotes\");},[status]);var addQuoteHandler=function addQuoteHandler(quoteData){sendRequest(quoteData);};return/*#__PURE__*/_jsx(QuoteForm,{isLoading:status===\"pending\",onAddQuote:addQuoteHandler});}","map":{"version":3,"sources":["C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-router-project/src/pages/NewQuote.js"],"names":["useEffect","QuoteForm","useHistory","useHttp","addQuote","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,YAAzB,C,2CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,aAAgCF,OAAO,CAACC,QAAD,CAAvC,CAAQE,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CACA,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAIO,MAAM,GAAK,WAAf,CAA4BC,OAAO,CAACC,IAAR,CAAa,SAAb,EAC7B,CAFQ,CAEN,CAACF,MAAD,CAFM,CAAT,CAIA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACrCL,WAAW,CAACK,SAAD,CAAX,CACD,CAFD,CAIA,mBACE,KAAC,SAAD,EAAW,SAAS,CAAEJ,MAAM,GAAK,SAAjC,CAA4C,UAAU,CAAEG,eAAxD,EADF,CAGD","sourcesContent":["import { useEffect } from \"react\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nexport default function NewQuote() {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") history.push(\"/quotes\");\r\n  }, [status]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}