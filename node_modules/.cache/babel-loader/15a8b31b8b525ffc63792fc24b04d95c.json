{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-router-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-router-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-router-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var FIREBASE_DOMAIN='https://react-quotes-95a45-default-rtdb.firebaseio.com';export function getAllQuotes(){return _getAllQuotes.apply(this,arguments);}function _getAllQuotes(){_getAllQuotes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,transformedQuotes,key,quoteObj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(data.message||'Could not fetch quotes.');case 8:transformedQuotes=[];for(key in data){quoteObj=_objectSpread({id:key},data[key]);transformedQuotes.push(quoteObj);}return _context.abrupt(\"return\",transformedQuotes);case 11:case\"end\":return _context.stop();}}},_callee);}));return _getAllQuotes.apply(this,arguments);}export function getSingleQuote(_x){return _getSingleQuote.apply(this,arguments);}function _getSingleQuote(){_getSingleQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(quoteId){var response,data,loadedQuote;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes/\").concat(quoteId,\".json\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;if(response.ok){_context2.next=8;break;}throw new Error(data.message||'Could not fetch quote.');case 8:loadedQuote=_objectSpread({id:quoteId},data);return _context2.abrupt(\"return\",loadedQuote);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _getSingleQuote.apply(this,arguments);}export function addQuote(_x2){return _addQuote.apply(this,arguments);}function _addQuote(){_addQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(quoteData){var response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"),{method:'POST',body:JSON.stringify(quoteData),headers:{'Content-Type':'application/json'}});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:data=_context3.sent;if(response.ok){_context3.next=8;break;}throw new Error(data.message||'Could not create quote.');case 8:return _context3.abrupt(\"return\",null);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _addQuote.apply(this,arguments);}export function addComment(_x3){return _addComment.apply(this,arguments);}function _addComment(){_addComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(requestData){var response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(requestData.quoteId,\".json\"),{method:'POST',body:JSON.stringify(requestData.commentData),headers:{'Content-Type':'application/json'}});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:data=_context4.sent;if(response.ok){_context4.next=8;break;}throw new Error(data.message||'Could not add comment.');case 8:return _context4.abrupt(\"return\",{commentId:data.name});case 9:case\"end\":return _context4.stop();}}},_callee4);}));return _addComment.apply(this,arguments);}export function getAllComments(_x4){return _getAllComments.apply(this,arguments);}function _getAllComments(){_getAllComments=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(quoteId){var response,data,transformedComments,key,commentObj;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(quoteId,\".json\"));case 2:response=_context5.sent;_context5.next=5;return response.json();case 5:data=_context5.sent;if(response.ok){_context5.next=8;break;}throw new Error(data.message||'Could not get comments.');case 8:transformedComments=[];for(key in data){commentObj=_objectSpread({id:key},data[key]);transformedComments.push(commentObj);}return _context5.abrupt(\"return\",transformedComments);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return _getAllComments.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-router-project/src/lib/api.js"],"names":["FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","transformedQuotes","key","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj"],"mappings":"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","sourcesContent":["const FIREBASE_DOMAIN = 'https://react-quotes-95a45-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n"]},"metadata":{},"sourceType":"module"}